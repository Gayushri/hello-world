pipeline{
  agent any
  environment {
        PATH = "$PATH:/usr/share/apache-maven/bin"
        registory="929896200375.dkr.ecr.ap-south-1.amazonaws.com/mydocker"
        }

      parameters {
        string(name: 'RELEASE_REPO', defaultValue: "libs-release", description: 'Repo for releses')
        string(name: 'SNAPSHOT_REPO', defaultValue: "libs-snapshot", description: 'Repo for snapshot releses')
    }

      stages {
        stage('Git Checkout'){
            steps{
                git 'https://github.com/Gayathri-praveen/hello-world.git'
            }
        }
       stage('sonar analysis'){
            steps
               {
                   withEnv(['SONAR_TOKEN=a68219fb650a4260ac04a1b43b6e78db91ab9ae3']){
                   sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=helloworldproject1'
                }
            }
        }
         stage ('Artifactory configuration') {
            steps {
                rtServer (
                    id: "jfrog-arti",
                    url: "https://helloworld1.jfrog.io/artifactory/mavenrepository/",

                )
            }
        }
         stage('Artifactory-Configuration') {
            steps {
                rtMavenDeployer (
                    id: 'spc-deployer',
                    serverId: 'jfrog-arti',
                    releaseRepo: "${params.RELEASE_REPO}",
                    snapshotRepo: "${params.SNAPSHOT_REPO}"

                )
            }
        }
         stage ('Build Docker Image') {
            steps {
                script {  sh 'docker build -t dockerfile:latest .'
                }
            }
        }
        stage('Push image to ECR'){
            steps{
                script{
                    sh 'aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 929896200375.dkr.ecr.ap-south-1.amazonaws.com'
                    sh 'docker tag dockerfile:latest 929896200375.dkr.ecr.ap-south-1.amazonaws.com/mydocker:latest'
                    sh 'docker push 929896200375.dkr.ecr.ap-south-1.amazonaws.com/mydocker:latest'
                }
            }
        }

        stage('Deploy ECR image to eks deployment'){
            steps{
                script{
                    sh '/home/ubuntu/bin/kubectl apply -f deploy.yml'
                    sh '/home/ubuntu/bin/kubectl apply -f service.yml'
                   
                }
            }
        }

    }

}
                
